#import "../../components/IndexHeader.gql"
#import "../../components/StudentQuotes.gql"
#import "../../components/ThemeNotifier.gql"
#import "../../components/Sponsors.gql"
#import "../../components/EventRestrictions.gql"
#import "../../components/Faq.gql"
#import "../../components/AwardDetails.gql"
#import "../../components/PastProjects.gql"
#import "../../components/PastPhotos.gql"
#import "../../components/Team.gql"

query IndexStaticPathsQuery($endDate: ClearDateTime!) {
  clear {
    events(where: { endDate: { gte: $endDate } }) {
      contentfulWebname
    }
  }
}

query IndexStaticPropsQuery ($webname: String! $endDate: ClearDateTime!, $cmsEndDate: CmsDateTime!, $locale: String!) {
  ...PastProjects

  cms {
    ...GlobalSponsors
    faqs (where: { program: { webname: "codeday" }, audience_contains_all: ["Student"], featured: true }, locale: $locale) {
      items {
        sys { id }
        ...Faq
      }
    }

    awards (where: { featured: true }, order: [ranking_ASC], locale: $locale) {
      items {
        ...AwardDetails
      }
    }

    regions(where:{ OR: [{ webname: $webname }, { aliases_contains_all: [$webname] }] }, limit: 1, locale: $locale) {
      items {
        name
        webname
        timezone
        ...PastPhotos
        localizationConfig {
          sys { id }
        }
      }
    }
    events(
      limit: 1,
      order: startsAt_ASC,
      where: {
        program: { webname: "codeday" }
        endsAt_gte: $cmsEndDate,
      },
      locale: $locale
    ) {
      items {
        ...ThemeNotifier
      }
    }
  }

  clear {
    findFirstEvent(where: {contentfulWebname: {equals: $webname}, endDate: {gte: $endDate}}, orderBy: {startDate: desc}) {
      id
      name
      canRegister
      canEarlyBirdRegister
      activeTicketPrice
      displayDate
      displayTime
      earlyBirdCutoff
      registrationCutoff
      minAge
      maxAge
      majorityAge
      overnightMinAge
      remainingTickets
      contentfulWebname
      requiresPromoCode
      region {
        iso3166Alpha2Code
        iso3166Alpha3Code
        e164CountryCode
        countryNameShortAdjective
        currency
        currencySymbol
        paymentProvider
        messagingServices
        localizationConfig {
          sys { id }
        }
      }
      eventGroup {
        id
        name
      }
      venue {
        name
        address
	addressInline
        mapLink
      }
      schedule( where: { finalized: { equals: true }, internal: { equals: false } }) {
        id
        name
        start
        displayTime
        description
        link
      }
      customForm: getMetadata(key: "registration.custom-form")
      customRegCollectOrg: getMetadata(key: "registration.collect-org")
      customContactAnd: getMetadata(key: "registration.contact-and")
      customDisplayDate: getMetadata(key: "date.display")
      customHideSponsors: getMetadata(key: "sponsors.hide-global")
      customHideCovid: getMetadata(key: "covid.hide")
      customLegal: getMetadata(key: "legal")
      noticeHero: getMetadata(key: "notice.hero")
      noticeTop: getMetadata(key: "notice.top")
      noticeBox: getMetadata(key: "notice.box")
      ...LocalSponsorsFragment
      ...EventRestrictionsFragment
      ...TeamFragment
    }
  }
  ...IndexHeaderFragment
  ...StudentQuotesFragment
  ...GlobalTeamFragment
}

